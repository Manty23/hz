from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder

OBLIGATORY_SUBJECTS = ["–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å", "–ò—Å—Ç–æ—Ä–∏—è –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞", "–ì—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å —á—Ç–µ–Ω–∏—è"]
PROFILE_SUBJECTS = ["–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", "–§–∏–∑–∏–∫–∞", "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è", "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", "–ë–∏–æ–ª–æ–≥–∏—è", "–•–∏–º–∏—è", "–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫",
                    "–û—Å–Ω–æ–≤—ã –ø—Ä–∞–≤–∞", "–¢–≤–æ—Ä—á–µ—Å–∫–∏–π —ç–∫–∑–∞–º–µ–Ω"]


async def get_obligatory_subjects_keyboard() -> InlineKeyboardMarkup:
    """Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤"""
    builder = InlineKeyboardBuilder()
    for subject in OBLIGATORY_SUBJECTS:
        builder.add(InlineKeyboardButton(text=f"üìö {subject}", callback_data=f"obligatory:{subject}"))
    builder.adjust(2)
    return builder.as_markup()


async def get_profile_subjects_keyboard_1() -> InlineKeyboardMarkup:
    """Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—å–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞"""
    builder = InlineKeyboardBuilder()
    for subject in PROFILE_SUBJECTS:
        builder.add(InlineKeyboardButton(text=f"üß™ {subject}", callback_data=f"profile1:{subject}"))
    builder.adjust(2)
    return builder.as_markup()


async def get_profile_subjects_keyboard_2(excluded_subject: str) -> InlineKeyboardMarkup:
    """Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Ç–æ—Ä–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—å–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ (–∏—Å–∫–ª—é—á–∞—è –ø–µ—Ä–≤—ã–π)"""
    builder = InlineKeyboardBuilder()
    available_subjects = [s for s in PROFILE_SUBJECTS if s != excluded_subject]
    for subject in available_subjects:
        builder.add(InlineKeyboardButton(text=f"üî¨ {subject}", callback_data=f"profile2:{subject}"))
    builder.adjust(2)
    return builder.as_markup()


async def get_answer_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤"""
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="A"), KeyboardButton(text="B")],
            [KeyboardButton(text="C"), KeyboardButton(text="D")]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )


async def get_end_test_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ—Å—Ç–∞"""
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üîÑ –ü—Ä–æ–π—Ç–∏ –µ—â—ë —Ä–∞–∑")],
            [KeyboardButton(text="‚ò∞ –ú–µ–Ω—é")]
        ],
        resize_keyboard=True
    )


async def get_main_menu_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìñ –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã")],
            [KeyboardButton(text="üß™ –ü—Ä–æ—Ñ–∏–ª—å–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã")],
            [KeyboardButton(text="üß™ –ü—Ä–æ–±–Ω—ã–π –ï–ù–¢")]
        ],
        resize_keyboard=True
    )